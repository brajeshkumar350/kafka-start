

start zookeeper
zookeeper-server-start.bat config\zookeeper.properties

strat kafka server
kafka-server-start.bat config\server.properties


1. create topic
kafka-topics --zookeeper 0.0.0.0:2181 --topic first_topic --create --partitions 3 --replication-factor 1
2.list of topic
kafka-topics --zookeeper 0.0.0.0:2181 --list

3.description of topic
kafka-topics --zookeeper 0.0.0.0:2181 --topic first_topic --describe

4.producer use to write the data
kafka-console-producer --broker-list 127.0.0.1:9092 --topic first_topic

5.consumer used to see the data
kafka-console-consumer -bootstrap-server 0.0.0.0:9092 --topic first_topic --from-beginning

kafka-console-consumer -bootstrap-server 0.0.0.0:9092 --topic first_topic --group my-first-app

kafka-consumer-groups -bootstrap-server 0.0.0.0:9092 --list

kafka-consumer-groups -bootstrap-server 0.0.0.0:9092 --describe --group my-first-app

kafka-consumer-groups -bootstrap-server 0.0.0.0:9092 --group my-first-app --reset-offsets --to-earliest --execute --topic first_topic


Message compression:
> much smaller producer request size
>faster ti transfer data over the network
>better throughput


Liner.ms & batch size
>5 request at same time
>linger.ms-number of milliseconds  a produceer is willing to wait before send batch out
>add some lag so the increae throughput

bacthc size:-
 maximun number of batch size is 16kb
 increae batch size so like 32kb or 64kb can help increae the compression ,throughput
 a batch is allocated per partion


 //delivery semantic for consumer
 1. commit offset at most once(after message recive)
 2. commit offset at least once(after message proceed)
 3. commit exactly once (with kafka api)
